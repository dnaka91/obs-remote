syntax = "proto3";

package obs_remote.v5.events;

import "google/protobuf/empty.proto";

service Events {
  rpc All(google.protobuf.Empty) returns (stream Event);
  rpc General(google.protobuf.Empty) returns (stream GeneralEvent);
  rpc Config(google.protobuf.Empty) returns (stream ConfigEvent);
  rpc Scenes(google.protobuf.Empty) returns (stream ScenesEvent);
  rpc Inputs(google.protobuf.Empty) returns (stream InputsEvent);
  rpc Transitions(google.protobuf.Empty) returns (stream TransitionsEvent);
  rpc Filters(google.protobuf.Empty) returns (stream FiltersEvent);
  rpc Outputs(google.protobuf.Empty) returns (stream OutputsEvent);
  rpc SceneItems(google.protobuf.Empty) returns (stream SceneItemsEvent);
  rpc MediaInputs(google.protobuf.Empty) returns (stream MediaInputsEvent);
  rpc HighVolume(google.protobuf.Empty) returns (stream HighVolumeEvent);
}

message Event {
  oneof value {
    GeneralEvent general = 1;
    ConfigEvent config = 2;
    ScenesEvent scenes = 3;
    InputsEvent inputs = 4;
    TransitionsEvent transitions = 5;
    FiltersEvent filters = 6;
    OutputsEvent outputs = 7;
    SceneItemsEvent scene_items = 8;
    MediaInputsEvent media_inputs = 9;
    HighVolumeEvent high_volume = 10;
  }
}

message GeneralEvent {
  oneof value {
    ExitStarted exit_started = 1;
    StudioModeStateChanged studio_mode_state_changed = 2;
    Custom custom = 3;
  }

  message ExitStarted {
  }
  message StudioModeStateChanged {
  }
  message Custom {
  }
}

message ConfigEvent {
  oneof value {
    CurrentSceneCollectionChanged current_scene_collection_changed = 1;
    SceneCollectionListChanged scene_collection_list_changed = 2;
    CurrentProfileChanged current_profile_changed = 3;
    ProfileListChanged profile_list_changed = 4;
  }

  message CurrentSceneCollectionChanged {
  }
  message SceneCollectionListChanged {
  }
  message CurrentProfileChanged {
  }
  message ProfileListChanged {
  }
}

message ScenesEvent {
  oneof value {
    Created created = 1;
    Removed removed = 2;
    NameChanged name_changed = 3;
    CurrentChanged current_changed = 4;
    CurrentPreviewChanged current_preview_changed = 5;
    ListReindexed list_reindexed = 6;
  }

  // Original: SceneCreated
  message Created {
  }
  // Original: SceneRemoved
  message Removed {
  }
  // Original: SceneNameChanged
  message NameChanged {
  }
  // Original: CurrentSceneChanged
  message CurrentChanged {
  }
  // Original CurrentPreviewSceneChanged
  message CurrentPreviewChanged {
  }
  // Original: SceneListReindexed
  message ListReindexed {
  }
}

message InputsEvent {
  oneof value {
    Created created = 1;
    Removed removed = 2;
    NameChanged name_changed = 3;
    ActiveStateChanged active_state_changed = 4;
    ShowStateChanged show_state_changed = 5;
    MuteStateChanged mute_state_changed = 6;
    VolumeChanged volume_changed = 7;
    AudioSyncOffsetChanged audio_sync_offset_changed = 8;
    AudioTracksChanged audio_tracks_changed = 9;
  }

  // Original: InputCreated
  message Created {
  }
  // Original: InputRemoved
  message Removed {
  }
  // Original: InputNameChanged
  message NameChanged {
  }
  // Original: InputActiveStateChanged
  message ActiveStateChanged {
  }
  // Original: InputShowStateChanged
  message ShowStateChanged {
  }
  // Original: InputMuteStateChanged
  message MuteStateChanged {
  }
  // Original: InputVolumeChanged
  message VolumeChanged {
  }
  // Original: InputAudioSyncOffsetChanged
  message AudioSyncOffsetChanged {
  }
  // Original: InputAudioTracksChanged
  message AudioTracksChanged {
  }
}

message TransitionsEvent {
  oneof value {
    Created created = 1;
    Removed removed = 2;
    NameChanged name_changed = 3;
    CurrentChanged current_changed = 4;
    CurrentDurationChanged current_duration_changed = 5;
    Started started = 6;
    Ended ended = 7;
  }

  // Original: TransitionCreated
  message Created {
  }
  // Original: TransitionRemoved
  message Removed {
  }
  // Original: TransitionNameChanged
  message NameChanged {
  }
  // Original: CurrentTransitionChanged
  message CurrentChanged {
  }
  // Original: CurrentTransitionDurationChanged
  message CurrentDurationChanged {
  }
  // Original: TransitionStarted
  message Started {
  }
  // Original: TransitionEnded
  message Ended {
  }
}

message FiltersEvent {
  oneof value {
    Created created = 1;
    Removed removed = 2;
    NameChanged name_changed = 3;
    AddedToSource added_to_source = 4;
    RemovedFromSource removed_from_source = 5;
    SourceListReindexed source_list_reindexed = 6;
  }

  // Original: FilterCreated
  message Created {
  }
  // Original: FilterRemoved
  message Removed {
  }
  // Original: FilterNameChanged
  message NameChanged {
  }
  // Original: SourceFilterAdded
  message AddedToSource {
  }
  // Orignal: SourceFilterRemoved
  message RemovedFromSource {
  }
  // Original: SourceListReindexed
  message SourceListReindexed {
  }
}

message OutputsEvent {
  oneof value {
    StreamStateChanged stream_state_changed = 1;
    RecordStateChanged record_state_changed = 2;
    ReplayBufferStateChanged replay_buffer_state_changed = 3;
    VirtualCamStateChanged virtual_cam_state_changed = 4;
  }

  message StreamStateChanged {
  }
  message RecordStateChanged {
  }
  message ReplayBufferStateChanged {
  }
  message VirtualCamStateChanged {
  }
}

message SceneItemsEvent {
  oneof value {
    Created created = 1;
    Removed removed = 2;
    ListReindexed list_reindexed = 3;
    EnableStateChanged enable_state_changed = 4;
    LockStateChanged lock_state_changed = 5;
    TransformChanged transform_changed = 6;
  }

  // Original: SceneItemCreated
  message Created {
  }
  // Original: SceneItemRemoved
  message Removed {
  }
  // Original: SceneItemListReindexed
  message ListReindexed {
  }
  // Original: SceneItemEnableStateChanged
  message EnableStateChanged {
  }
  // Original: SceneItemLockStateChanged
  message LockStateChanged {
  }
  // Original: SceneItemTransformChanged
  message TransformChanged {
  }
}

message MediaInputsEvent {
  oneof value {
    PlaybackStarted playback_started = 1;
    PlaybackEnded playback_ended = 2;
    ActionTriggered action_triggered = 3;
  }

  // Original: MediaInputPlaybackStarted
  message PlaybackStarted {
  }
  // Original: MediaInputPlaybackEnded
  message PlaybackEnded {
  }
  // Original: MediaInputActionTriggered
  message ActionTriggered {
  }
}

message HighVolumeEvent {
  oneof value {
    InputVolumeMeters input_volume_meters = 1;
  }

  message InputVolumeMeters {
  }
}
